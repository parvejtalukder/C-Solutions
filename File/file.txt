==================================================
        File Handling in C Programming
==================================================

File handling is one of the most important features of the C programming language. It allows programs to create, read, write, and modify files stored on the disk. This is essential for storing data permanently, processing large datasets, and interacting with user inputs/output beyond the terminal.


--------------------------------------------------
            Types of File Operations
--------------------------------------------------

In C, the standard library provides several functions to handle files. The most common operations include:

- Opening a file – using fopen()
- Reading from a file – using fscanf(), fgets(), or fgetc()
- Writing to a file – using fprintf(), fputs(), or fputc()
- Closing a file – using fclose()


---------------------------
      Opening a File
---------------------------

You can open a file using:

    FILE *filePointer;
    filePointer = fopen("filename.txt", "mode");

Modes:
- "r" – read
- "w" – write (overwrite)
- "a" – append
- "r+" – read and write
- "w+" – write and read (overwrite)
- "a+" – read and append


---------------------------
     Writing to a File
---------------------------

    FILE *f = fopen("data.txt", "w");
    if (f != NULL) {
        fprintf(f, "Hello, file!\\n");
        fclose(f);
    }

This code opens a file named data.txt in write mode and writes a line to it.


---------------------------
    Reading from a File
---------------------------

    FILE *f = fopen("data.txt", "r");
    char line[100];
    while (fgets(line, sizeof(line), f)) {
        printf("%s", line);
    }
    fclose(f);

This reads and prints each line from the file until the end.


---------------------------
     Checking for Errors
---------------------------

Always check if the file opened successfully:

    if (f == NULL) {
        printf("Error opening file.\\n");
        return 1;
    }


-------------------------------
    Why Use File Handling?
-------------------------------

- Save user input or results
- Read configuration or data files
- Create logs and reports
- Load resources like text, numbers, and objects for processing


---------------------------
        Final Tips
---------------------------

- Use fclose() to close the file and free system resources.
- Use larger char arrays (e.g., char line[1024];) to avoid cutting off longer lines.
- Handle files securely by validating user input filenames and checking for NULL file pointers.


=======================
      Conclusion
=======================

File handling in C adds power and flexibility to your programs. By mastering it, you open the door to building more advanced applications like text processors, log analyzers, and even databases.
